

import numpy as np
import matplotlib.pyplot as plt

epsilon = 3
beta = 1 / epsilon




acc_tri = [1.1532179117202759, 0.9346305727958679, 0.7539350986480713, 0.6941928267478943, 0.6532477140426636, 0.5065304636955261, 0.46587881445884705, 0.4465745687484741, 0.40036213397979736, 0.3685700595378876, 0.3447015881538391, 0.2966623604297638, 0.3116658329963684, 0.2978097200393677, 0.2675158977508545, 0.2564295828342438, 0.27141907811164856, 0.2588050663471222, 0.2640271484851837, 0.25108686089515686, 0.2378489226102829, 0.2740808129310608, 0.19855859875679016, 0.21168118715286255, 0.2124757468700409, 0.20105087757110596, 0.17547310888767242, 0.1782010942697525, 0.24261848628520966, 0.17088571190834045, 0.210966557264328, 0.22111783921718597, 0.21113774180412292, 0.2076045274734497, 0.194920614361763, 0.15541782975196838, 0.15461868047714233, 0.17132002115249634, 0.29814326763153076, 0.21860699355602264, 0.2170882374048233, 0.1543789505958557, 0.22428786754608154, 0.1936795860528946, 0.19009935855865479, 0.20378749072551727, 0.15991266071796417, 0.16265621781349182, 0.20621582865715027, 0.1392708122730255]


acc_back_primary = [1.1847350597381592, 0.9913569688796997, 0.7836809158325195, 0.6843585968017578, 0.7119156122207642, 0.5865572690963745, 0.5923256874084473, 0.6019508838653564, 0.5262371301651001, 0.4727059602737427, 0.48444095253944397, 0.4677782356739044, 0.4482711851596832, 0.4675140082836151, 0.41113388538360596, 0.41456231474876404, 0.48302799463272095, 0.43379998207092285, 0.45669907331466675, 0.39024052023887634, 0.3590780198574066, 0.4406086504459381, 0.47509464621543884, 0.5087398290634155, 0.46332448720932007, 0.4297980070114136, 0.48647668957710266, 0.3894509971141815, 0.43909984827041626, 0.45673155784606934, 0.5218709111213684, 0.4388706088066101, 0.44694066047668457, 0.46141520142555237, 0.4594162702560425, 0.5428345203399658, 0.5417659878730774, 0.5045318007469177, 0.46831539273262024, 0.4757464528083801, 0.5192668437957764, 0.4640253782272339, 0.4108920097351074, 0.4170498847961426, 0.42188572883605957, 0.5184144973754883, 0.524044930934906, 0.5108617544174194, 0.568423867225647, 0.502873957157135]
acc_back = [3.523346424102783, 3.2649917602539062, 3.2795872688293457, 3.2557778358459473, 3.141547203063965, 2.2904675006866455, 3.342085361480713, 2.4935009479522705, 1.8558261394500732, 3.188629627227783, 2.8524622917175293, 3.2189981937408447, 4.1943840980529785, 3.2379555702209473, 3.612229585647583, 2.745051622390747, 3.7924225330352783, 3.6871423721313477, 3.586181879043579, 2.29599928855896, 4.822118759155273, 3.5897068977355957, 2.6801698207855225, 4.5918660163879395, 3.1363556385040283, 3.4978060722351074, 4.428435802459717, 3.6469571590423584, 3.115969181060791, 2.8328287601470947, 3.512369394302368, 5.188060283660889, 4.404877662658691, 4.119881629943848, 5.547794818878174, 4.429933547973633, 4.159397125244141, 3.44144868850708, 4.1649651527404785, 5.627133369445801, 4.338404178619385, 5.642548084259033, 5.850802898406982, 4.0668416023254395, 5.251626491546631, 5.130047798156738, 4.820130825042725, 5.997131824493408, 4.698491096496582, 5.655272006988525]

acc_test = [0.0524633564054966, 0.03991084545850754, 0.03214697912335396, 0.02721893973648548, 0.02404020167887211, 0.024220719933509827, 0.018846606835722923, 0.01928555592894554, 0.016515087336301804, 0.015326372347772121, 0.015041365288197994, 0.0127301886677742, 0.01173956785351038, 0.010459702461957932, 0.011899149045348167, 0.009772599674761295, 0.00925623532384634, 0.010080842301249504, 0.008525753393769264, 0.007799237500876188, 0.006507417652755976, 0.01089209970086813, 0.008343963883817196, 0.006274899933487177, 0.005693798419088125, 0.007122068200260401, 0.004767589271068573, 0.004632680676877499, 0.004591294098645449, 0.004378119483590126, 0.004410473629832268, 0.003850495908409357, 0.004350118804723024, 0.0035934874322265387, 0.0036908730398863554, 0.0033575166016817093, 0.00344785675406456, 0.003666795790195465, 0.0036866432055830956, 0.0038214162923395634, 0.002959242556244135, 0.003326814854517579, 0.0031158956699073315, 0.0034788022749125957, 0.002788432640954852, 0.00280476501211524, 0.003061947412788868, 0.003218434052541852, 0.0028292264323681593, 0.003421980421990156]


'''
backdoor_acc [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.99333, 0.99, 0.99333, 0.99, 0.99, 0.97667, 0.97, 0.95333, 0.94667, 0.92333, 0.89, 0.87, 0.84333, 0.80667, 0.79, 0.76667, 0.77667, 0.74, 0.70667, 0.72667, 0.72333, 0.71333, 0.70667, 0.72, 0.71, 0.69333, 0.71, 0.68333, 0.68333, 0.66, 0.67333, 0.72, 0.72, 0.71333, 0.72, 0.70333, 0.72333, 0.73667, 0.73667, 0.74, 0.71333, 0.68333, 0.70333, 0.73333, 0.69, 0.71333, 0.73, 0.70667, 0.74667, 0.75333, 0.73667, 0.73, 0.70667, 0.74, 0.75333, 0.74667, 0.77667, 0.77333, 0.79, 0.78, 0.75, 0.77, 0.74333, 0.73, 0.69, 0.72333, 0.72333, 0.77, 0.77333, 0.76333, 0.75, 0.74, 0.73667, 0.72667, 0.72667, 0.74333, 0.74667, 0.73667, 0.72333, 0.77667, 0.75667, 0.75333, 0.73, 0.70333, 0.70667, 0.72667, 0.73, 0.73667, 0.74667, 0.72, 0.76, 0.74333, 0.75333, 0.71667, 0.77667, 0.78, 0.76667, 0.75, 0.76333, 0.78, 0.74333, 0.75333, 0.78, 0.77, 0.75667, 0.76, 0.76, 0.72667, 0.71667, 0.73333, 0.73667, 0.72333, 0.76333, 0.76667, 0.75667, 0.77667, 0.72, 0.74, 0.76333, 0.74333, 0.74, 0.74333, 0.72, 0.74667, 0.71, 0.74333, 0.75, 0.78333, 0.76, 0.75333, 0.74667, 0.72667, 0.69333, 0.68667, 0.72667, 0.73, 0.72, 0.72667, 0.73667, 0.71333, 0.70333, 0.69333, 0.67667, 0.68333, 0.68, 0.65667, 0.72, 0.71333, 0.72667, 0.73, 0.71667, 0.70667, 0.70667, 0.69667, 0.71667, 0.7, 0.66333, 0.67, 0.67, 0.69667, 0.71667, 0.72, 0.68, 0.65333, 0.69667, 0.66667, 0.68333, 0.67667, 0.65667, 0.65, 0.66, 0.69, 0.66, 0.65667, 0.63667, 0.66333, 0.64, 0.67, 0.69667, 0.69667, 0.66, 0.7, 0.64667, 0.67333, 0.64667, 0.66, 0.64667, 0.61, 0.61, 0.62333, 0.64, 0.65, 0.66]
acc_test:  [0.975, 0.9733, 0.9735, 0.9723, 0.9711, 0.9707, 0.9704, 0.9695, 0.9689, 0.965, 0.9645, 0.9584, 0.9525, 0.946, 0.9341, 0.9212, 0.9004, 0.8731, 0.855, 0.8325, 0.7978, 0.7844, 0.7701, 0.759, 0.7527, 0.7476, 0.7573, 0.7626, 0.7531, 0.7643, 0.766, 0.7468, 0.7477, 0.7502, 0.7426, 0.7348, 0.7461, 0.7616, 0.775, 0.7863, 0.7837, 0.789, 0.7831, 0.7898, 0.8124, 0.8121, 0.8052, 0.8018, 0.7975, 0.7964, 0.8069, 0.7983, 0.8141, 0.8268, 0.8232, 0.8288, 0.8351, 0.8325, 0.8273, 0.8207, 0.8296, 0.8369, 0.8504, 0.8659, 0.858, 0.8652, 0.864, 0.8595, 0.8542, 0.8539, 0.8463, 0.8424, 0.8502, 0.8591, 0.8764, 0.8809, 0.8784, 0.8738, 0.8752, 0.8748, 0.8682, 0.8653, 0.8743, 0.8745, 0.8705, 0.8695, 0.8784, 0.8736, 0.8786, 0.8752, 0.863, 0.8704, 0.8738, 0.8795, 0.8808, 0.8875, 0.8921, 0.8879, 0.8893, 0.8807, 0.8849, 0.8985, 0.8975, 0.8979, 0.894, 0.8941, 0.9001, 0.8965, 0.8991, 0.9087, 0.9103, 0.9082, 0.9101, 0.9048, 0.8996, 0.9004, 0.903, 0.8983, 0.8978, 0.9079, 0.9116, 0.9144, 0.9128, 0.9045, 0.9083, 0.9122, 0.9081, 0.9057, 0.9056, 0.9073, 0.9076, 0.9047, 0.907, 0.9124, 0.9213, 0.9243, 0.9168, 0.9124, 0.9073, 0.8989, 0.9029, 0.909, 0.9098, 0.9095, 0.9185, 0.9181, 0.912, 0.9115, 0.9093, 0.9079, 0.9051, 0.9016, 0.9028, 0.9159, 0.9176, 0.9171, 0.9187, 0.914, 0.9124, 0.9165, 0.9127, 0.9136, 0.9112, 0.9016, 0.9041, 0.9104, 0.915, 0.9177, 0.9185, 0.9107, 0.9093, 0.9112, 0.9108, 0.9066, 0.9037, 0.9011, 0.9094, 0.9169, 0.917, 0.9155, 0.9143, 0.9138, 0.9118, 0.9124, 0.9164, 0.9236, 0.9218, 0.9145, 0.9137, 0.9145, 0.9171, 0.9142, 0.9135, 0.9146, 0.9081, 0.9038, 0.9057, 0.9129, 0.9182, 0.9157]
'''

x=[]
acc_tri_s = []
acc_back_s =[]
acc_back_p_s = []
acc_test_s =[]



t_i=1
for i in range(50):
    # print(np.random.laplace(0, 1)/10+0.2)
    x.append(i*t_i)
    #y_fkl[i] = y_fkl[i*2]*100
    acc_tri_s.append(acc_tri[i*t_i]*1)
    acc_back_s.append(acc_back[i*t_i]*0.1)
    acc_back_p_s.append(acc_back_primary[i*t_i]*1)
    acc_test_s.append(acc_test[i*t_i]*1)


plt.figure()
lw=5
plt.plot(x, acc_tri_s, color='g', linestyle='-',  label='Primary (SMS)',linewidth=lw, markersize=10)
plt.plot(x, acc_back_p_s, color='deepskyblue', linestyle=(0,(2,1,1,1)),   label='Primary (MIB)',linewidth=lw,  markersize=10)
# #plt.plot(x, y_fkl, color='g',  marker='+',  label='VRFL')
plt.plot(x, acc_back_s, color='orange', linestyle=(0, (3, 1, 1, 1)),  label='Backdooring',linewidth=lw, markersize=10)
# #plt.plot(x, y_fkl, color='g',  marker='+',  label='VRFL')

plt.plot(x, acc_test_s, color='tan', linestyle='--',   label='Model Seeding',linewidth=lw,  markersize=10)
# plt.plot(x, y_vbu_b_acc_list, color='b', linestyle=(0,(2,1,1,1)),   label='VBU (Er.)',linewidth=lw,  markersize=10)
#
#
# plt.plot(x, y_hbu_acc_list, color='r',  linestyle='-.',  label='HBFU',linewidth=lw, markersize=10)
# plt.plot(x, y_hbu_b_acc_list, color='grey',  linestyle=(0,(3,1,2,1)),  label='HBFU (Er.)',linewidth=lw, markersize=10)

#linestyle=(0,(3,1,1,1))
#plt.plot(x, y_vbu_acc_list, color='orange', linestyle='--',  marker='x',  label='BFU',linewidth=4,  markersize=10)
#plt.plot(x, y_vibu_ss_acc_list, color='g',  marker='*',  label='BFU-SS',linewidth=4, markersize=10)
# #plt.plot(x, y_fkl, color='g',  marker='+',  label='VRFL')
#plt.plot(x, y_hbu_acc_list, color='r',  marker='p',  label='HBU',linewidth=4, markersize=10)

# plt.plot(x, unl_fr, color='blue', marker='^', label='Retrain',linewidth=4, markersize=10)
# plt.plot(x, unl_br, color='orange',  marker='x',  label='BFU',linewidth=4,  markersize=10)
# plt.plot(x, unl_self_r, color='g',  marker='*',  label='BFU-SS',linewidth=4, markersize=10)
# plt.plot(x, unl_hess_r, color='r',  marker='p',  label='HFU',linewidth=4, markersize=10)

# plt.plot(x, y_unl_s, color='b', marker='^', label='Normal Bayessian Fed Unlearning',linewidth=3, markersize=8)
# plt.plot(x, y_unl_self_s, color='r',  marker='x',  label='Self-sharing Fed Unlearning',linewidth=3, markersize=8)
# #plt.plot(x, y_fkl, color='g',  marker='+',  label='VRFL')
# plt.plot(x, y_hessian_30_s, color='y',  marker='*',  label='Unlearning INFOCOM22',linewidth=3, markersize=8)


# plt.grid()
leg = plt.legend(fancybox=True, shadow=True)
plt.xlabel('Epoch' ,fontsize=20)
plt.ylabel('Loss Value' ,fontsize=20)
my_y_ticks = np.arange(0 ,1.25,0.2)
plt.yticks(my_y_ticks,fontsize=20)
my_x_ticks = np.arange(0, 51, 5)
plt.xticks(my_x_ticks,fontsize=20)
# plt.title('CIFAR10 IID')
plt.legend(loc='best',fontsize=20) # best
# plt.legend(bbox_to_anchor=(0., 1.02, 1., .102), loc=3,
#            ncol=3, mode="expand", borderaxespad=0., fontsize=16)

plt.tight_layout()
#plt.title("Fashion MNIST")
plt.rcParams['figure.figsize'] = (2.0, 1)
plt.rcParams['image.interpolation'] = 'nearest'
plt.rcParams['figure.subplot.left'] = 0.11
plt.rcParams['figure.subplot.bottom'] = 0.08
plt.rcParams['figure.subplot.right'] = 0.977
plt.rcParams['figure.subplot.top'] = 0.969
plt.savefig('cifar10_epoch_loss_when_trianing.pdf', format='pdf', dpi=200)
plt.show()