

import numpy as np
import matplotlib.pyplot as plt

epsilon = 3
beta = 1 / epsilon



acc_tri =  [0.08951425552368164, 0.057201944291591644, 0.04217648133635521, 0.04003172740340233, 0.03558538481593132, 0.018727250397205353, 0.020363518968224525, 0.014389028772711754, 0.01904592476785183, 0.012463103979825974, 0.011062489822506905, 0.008283763192594051, 0.009949326515197754, 0.008677830919623375, 0.009026619605720043, 0.005721171386539936, 0.007249250542372465, 0.005433142650872469, 0.013529203832149506, 0.00398313207551837, 0.0040877815335989, 0.006637935526669025, 0.004134048242121935, 0.003549960907548666, 0.002607520902529359, 0.002700116252526641, 0.0027202225755900145, 0.002961627906188369, 0.004130072891712189, 0.011300192214548588, 0.004068107809871435, 0.005500368308275938, 0.002091652248054743, 0.002182864351198077, 0.0017176250694319606, 0.0016339679714292288, 0.001552513800561428, 0.0012713978067040443, 0.001907489262521267, 0.002675476251170039, 0.0022689485922455788, 0.0020259760785847902, 0.0011341667268425226, 0.0014384182868525386, 0.0015759491361677647, 0.013674790039658546, 0.0019050589762628078, 0.0030722597148269415, 0.001324891927652061, 0.0016857157461345196]


acc_back_primary = [0.02734972909092903, 0.030262941494584084, 0.03017612174153328, 0.02851266600191593, 0.014185924082994461, 0.02787051536142826, 0.01261403039097786, 0.024875035509467125, 0.008612245321273804, 0.024926764890551567, 0.022603841498494148, 0.010058152489364147, 0.022143647074699402, 0.026750104501843452, 0.015166590921580791, 0.027800241485238075, 0.017317553982138634, 0.014861575327813625, 0.024294685572385788, 0.03423478826880455, 0.022441793233156204, 0.05272521823644638, 0.043910469859838486, 0.024532223120331764, 0.03204742446541786, 0.03390563651919365, 0.020991744473576546, 0.02080511301755905, 0.015410933643579483, 0.01746455207467079, 0.03950289636850357, 0.01785806566476822, 0.008478879928588867, 0.032408345490694046, 0.009904867969453335, 0.009153375402092934, 0.02179739996790886, 0.0733187273144722, 0.027471456676721573, 0.023864008486270905, 0.0429060235619545, 0.0035300152376294136, 0.0265053641051054, 0.02891141176223755, 0.015450999140739441, 0.056408245116472244, 0.050419215112924576, 0.02127106674015522, 0.048796117305755615, 0.011378410272300243]

acc_back = [6.079427242279053, 7.166053771972656, 6.325015068054199, 5.6107258796691895, 6.805262565612793, 7.262758731842041, 5.931762218475342, 7.067909240722656, 7.192127227783203, 8.542560577392578, 7.291333198547363, 7.644715785980225, 5.885098457336426, 7.504953384399414, 6.961482048034668, 8.621305465698242, 8.054109573364258, 7.059335708618164, 5.3287577629089355, 8.542015075683594, 7.6438889503479, 7.124248027801514, 8.868586540222168, 8.540493965148926, 7.489041328430176, 5.67305850982666, 7.304542541503906, 7.481969356536865, 8.92027759552002, 5.705828666687012, 8.180965423583984, 5.94453763961792, 6.714006423950195, 7.155730724334717, 8.687870025634766, 7.916326522827148, 8.734322547912598, 8.583230972290039, 5.463919639587402, 9.160651206970215, 7.665299415588379, 6.851874351501465, 9.187253952026367, 9.42167854309082, 9.234790802001953, 7.903174877166748, 7.165524959564209, 9.3836030960083, 9.282626152038574, 6.150668144226074]

acc_test = [0.026460684835910797, 0.01973123475909233, 0.01611321046948433, 0.013707415200769901, 0.012178469449281693, 0.010878877714276314, 0.009412970393896103, 0.0071917031891644, 0.006733748596161604, 0.005280497018247843, 0.0050548529252409935, 0.004374825861304998, 0.003876639297232032, 0.003282765857875347, 0.0039446125738322735, 0.0027621975168585777, 0.0027677228208631277, 0.0026526106521487236, 0.002130259992554784, 0.0017868665745481849, 0.001658146153204143, 0.001502734376117587, 0.001382391550578177, 0.0012146264780312777, 0.0011388135608285666, 0.0011081694392487407, 0.0010207074228674173, 0.0010066787945106626, 0.0008854016195982695, 0.0009176114690490067, 0.0008344867383129895, 0.0008329689153470099, 0.0007810762617737055, 0.0007564010447822511, 0.0007112390594556928, 0.000704713340383023, 0.0006784172728657722, 0.0007048906991258264, 0.000661105674225837, 0.000652860093396157, 0.0006857041735202074, 0.0006438133423216641, 0.0006184091325849295, 0.0007505852845497429, 0.0005970034981146455, 0.0005854860064573586, 0.000581142317969352, 0.0005579421995207667, 0.0005569938803091645, 0.0005588930216617882]


'''
backdoor_acc [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.99333, 0.99, 0.99333, 0.99, 0.99, 0.97667, 0.97, 0.95333, 0.94667, 0.92333, 0.89, 0.87, 0.84333, 0.80667, 0.79, 0.76667, 0.77667, 0.74, 0.70667, 0.72667, 0.72333, 0.71333, 0.70667, 0.72, 0.71, 0.69333, 0.71, 0.68333, 0.68333, 0.66, 0.67333, 0.72, 0.72, 0.71333, 0.72, 0.70333, 0.72333, 0.73667, 0.73667, 0.74, 0.71333, 0.68333, 0.70333, 0.73333, 0.69, 0.71333, 0.73, 0.70667, 0.74667, 0.75333, 0.73667, 0.73, 0.70667, 0.74, 0.75333, 0.74667, 0.77667, 0.77333, 0.79, 0.78, 0.75, 0.77, 0.74333, 0.73, 0.69, 0.72333, 0.72333, 0.77, 0.77333, 0.76333, 0.75, 0.74, 0.73667, 0.72667, 0.72667, 0.74333, 0.74667, 0.73667, 0.72333, 0.77667, 0.75667, 0.75333, 0.73, 0.70333, 0.70667, 0.72667, 0.73, 0.73667, 0.74667, 0.72, 0.76, 0.74333, 0.75333, 0.71667, 0.77667, 0.78, 0.76667, 0.75, 0.76333, 0.78, 0.74333, 0.75333, 0.78, 0.77, 0.75667, 0.76, 0.76, 0.72667, 0.71667, 0.73333, 0.73667, 0.72333, 0.76333, 0.76667, 0.75667, 0.77667, 0.72, 0.74, 0.76333, 0.74333, 0.74, 0.74333, 0.72, 0.74667, 0.71, 0.74333, 0.75, 0.78333, 0.76, 0.75333, 0.74667, 0.72667, 0.69333, 0.68667, 0.72667, 0.73, 0.72, 0.72667, 0.73667, 0.71333, 0.70333, 0.69333, 0.67667, 0.68333, 0.68, 0.65667, 0.72, 0.71333, 0.72667, 0.73, 0.71667, 0.70667, 0.70667, 0.69667, 0.71667, 0.7, 0.66333, 0.67, 0.67, 0.69667, 0.71667, 0.72, 0.68, 0.65333, 0.69667, 0.66667, 0.68333, 0.67667, 0.65667, 0.65, 0.66, 0.69, 0.66, 0.65667, 0.63667, 0.66333, 0.64, 0.67, 0.69667, 0.69667, 0.66, 0.7, 0.64667, 0.67333, 0.64667, 0.66, 0.64667, 0.61, 0.61, 0.62333, 0.64, 0.65, 0.66]
acc_test:  [0.975, 0.9733, 0.9735, 0.9723, 0.9711, 0.9707, 0.9704, 0.9695, 0.9689, 0.965, 0.9645, 0.9584, 0.9525, 0.946, 0.9341, 0.9212, 0.9004, 0.8731, 0.855, 0.8325, 0.7978, 0.7844, 0.7701, 0.759, 0.7527, 0.7476, 0.7573, 0.7626, 0.7531, 0.7643, 0.766, 0.7468, 0.7477, 0.7502, 0.7426, 0.7348, 0.7461, 0.7616, 0.775, 0.7863, 0.7837, 0.789, 0.7831, 0.7898, 0.8124, 0.8121, 0.8052, 0.8018, 0.7975, 0.7964, 0.8069, 0.7983, 0.8141, 0.8268, 0.8232, 0.8288, 0.8351, 0.8325, 0.8273, 0.8207, 0.8296, 0.8369, 0.8504, 0.8659, 0.858, 0.8652, 0.864, 0.8595, 0.8542, 0.8539, 0.8463, 0.8424, 0.8502, 0.8591, 0.8764, 0.8809, 0.8784, 0.8738, 0.8752, 0.8748, 0.8682, 0.8653, 0.8743, 0.8745, 0.8705, 0.8695, 0.8784, 0.8736, 0.8786, 0.8752, 0.863, 0.8704, 0.8738, 0.8795, 0.8808, 0.8875, 0.8921, 0.8879, 0.8893, 0.8807, 0.8849, 0.8985, 0.8975, 0.8979, 0.894, 0.8941, 0.9001, 0.8965, 0.8991, 0.9087, 0.9103, 0.9082, 0.9101, 0.9048, 0.8996, 0.9004, 0.903, 0.8983, 0.8978, 0.9079, 0.9116, 0.9144, 0.9128, 0.9045, 0.9083, 0.9122, 0.9081, 0.9057, 0.9056, 0.9073, 0.9076, 0.9047, 0.907, 0.9124, 0.9213, 0.9243, 0.9168, 0.9124, 0.9073, 0.8989, 0.9029, 0.909, 0.9098, 0.9095, 0.9185, 0.9181, 0.912, 0.9115, 0.9093, 0.9079, 0.9051, 0.9016, 0.9028, 0.9159, 0.9176, 0.9171, 0.9187, 0.914, 0.9124, 0.9165, 0.9127, 0.9136, 0.9112, 0.9016, 0.9041, 0.9104, 0.915, 0.9177, 0.9185, 0.9107, 0.9093, 0.9112, 0.9108, 0.9066, 0.9037, 0.9011, 0.9094, 0.9169, 0.917, 0.9155, 0.9143, 0.9138, 0.9118, 0.9124, 0.9164, 0.9236, 0.9218, 0.9145, 0.9137, 0.9145, 0.9171, 0.9142, 0.9135, 0.9146, 0.9081, 0.9038, 0.9057, 0.9129, 0.9182, 0.9157]
'''

x=[]
acc_tri_s = []
acc_back_s =[]
acc_back_p_s = []
acc_test_s =[]


t_i=1
for i in range(50):
    # print(np.random.laplace(0, 1)/10+0.2)
    x.append(i*t_i)
    #y_fkl[i] = y_fkl[i*2]*100
    acc_tri_s.append(acc_tri[i*t_i]*1)
    acc_back_s.append(acc_back[i*t_i]*0.005)
    acc_back_p_s.append(acc_back_primary[i*t_i]*1)
    acc_test_s.append(acc_test[i*t_i]*1)


plt.figure()
lw=5
plt.plot(x, acc_tri_s, color='g', linestyle='-',  label='Primary (SSW)',linewidth=lw, markersize=10)
plt.plot(x, acc_back_p_s, color='deepskyblue', linestyle=(0,(2,1,1,1)),   label='Primary (MIB)',linewidth=lw,  markersize=10)
# #plt.plot(x, y_fkl, color='g',  marker='+',  label='VRFL')
plt.plot(x, acc_back_s, color='orange', linestyle=(0, (3, 1, 1, 1)),  label='Backdooring',linewidth=lw, markersize=10)
# #plt.plot(x, y_fkl, color='g',  marker='+',  label='VRFL')

plt.plot(x, acc_test_s, color='tan', linestyle='--',   label='Watermarking',linewidth=lw,  markersize=10)

#
#
# plt.plot(x, y_hbu_acc_list, color='r',  linestyle='-.',  label='HBFU',linewidth=lw, markersize=10)
# plt.plot(x, y_hbu_b_acc_list, color='grey',  linestyle=(0,(3,1,2,1)),  label='HBFU (Er.)',linewidth=lw, markersize=10)

#linestyle=(0,(3,1,1,1))
#plt.plot(x, y_vbu_acc_list, color='orange', linestyle='--',  marker='x',  label='BFU',linewidth=4,  markersize=10)
#plt.plot(x, y_vibu_ss_acc_list, color='g',  marker='*',  label='BFU-SS',linewidth=4, markersize=10)
# #plt.plot(x, y_fkl, color='g',  marker='+',  label='VRFL')
#plt.plot(x, y_hbu_acc_list, color='r',  marker='p',  label='HBU',linewidth=4, markersize=10)

# plt.plot(x, unl_fr, color='blue', marker='^', label='Retrain',linewidth=4, markersize=10)
# plt.plot(x, unl_br, color='orange',  marker='x',  label='BFU',linewidth=4,  markersize=10)
# plt.plot(x, unl_self_r, color='g',  marker='*',  label='BFU-SS',linewidth=4, markersize=10)
# plt.plot(x, unl_hess_r, color='r',  marker='p',  label='HFU',linewidth=4, markersize=10)

# plt.plot(x, y_unl_s, color='b', marker='^', label='Normal Bayessian Fed Unlearning',linewidth=3, markersize=8)
# plt.plot(x, y_unl_self_s, color='r',  marker='x',  label='Self-sharing Fed Unlearning',linewidth=3, markersize=8)
# #plt.plot(x, y_fkl, color='g',  marker='+',  label='VRFL')
# plt.plot(x, y_hessian_30_s, color='y',  marker='*',  label='Unlearning INFOCOM22',linewidth=3, markersize=8)


# plt.grid()
leg = plt.legend(fancybox=True, shadow=True)
plt.xlabel('Epoch' ,fontsize=20)
plt.ylabel('Loss Value' ,fontsize=20)
my_y_ticks = np.arange(0 ,0.15,0.03)
plt.yticks(my_y_ticks,fontsize=20)
my_x_ticks = np.arange(0, 51, 5)
plt.xticks(my_x_ticks,fontsize=20)
# plt.title('CIFAR10 IID')
plt.legend(loc='center left',fontsize=20) # best
# plt.legend(bbox_to_anchor=(0., 1.02, 1., .102), loc=3,
#            ncol=3, mode="expand", borderaxespad=0., fontsize=16)

plt.tight_layout()
#plt.title("Fashion MNIST")
plt.rcParams['figure.figsize'] = (2.0, 1)
plt.rcParams['image.interpolation'] = 'nearest'
plt.rcParams['figure.subplot.left'] = 0.11
plt.rcParams['figure.subplot.bottom'] = 0.08
plt.rcParams['figure.subplot.right'] = 0.977
plt.rcParams['figure.subplot.top'] = 0.969
plt.savefig('mnist_epoch_loss_when_trianing.pdf', format='pdf', dpi=200)
plt.show()